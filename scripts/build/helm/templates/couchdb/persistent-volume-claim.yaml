{{- if and (not .Values.couchdb.clusteredCouchEnabled) (or (eq (toString .Values.cluster_type) "eks") (eq (toString .Values.cluster_type) "gke") (eq (toString .Values.cluster_type) "k3s-k3d")) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    cht.service: couchdb-claim0
  name: couchdb-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.couchdb.couchdb_node_storage_size | default "100Mi"}}  # Fallback for backward compatibility
  {{- if eq (toString .Values.cluster_type) "eks" }}
  {{- if .Values.couchdb_data.preExistingDataAvailable }}
  volumeName: couchdb-pv-{{ .Values.namespace }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.couchdb.storage_class | default "ebs-gp2" }}  # Fallback for backward compatibility
  {{- end }}
  {{- else if eq (toString .Values.cluster_type) "gke" }}
  {{- if .Values.couchdb_data.preExistingDataAvailable }}
  volumeName: couchdb-pv-{{ .Values.namespace }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.couchdb.storage_class | default "standard-rwo" }}  # Fallback for backward compatibility
  {{- end }}
  {{- else if eq (toString .Values.cluster_type) "k3s-k3d" }}
  volumeName: couchdb-pv-{{ .Values.namespace }}
  storageClassName: local-path
  {{- end }}
status: {}
{{- end }}

{{- if $.Values.couchdb.clusteredCouchEnabled }}
{{- range $i, $e := until (int $.Values.clusteredCouch.noOfCouchDBNodes) }}
{{ $nodeNumber := add $i 1 }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    cht.service: couchdb-{{ $nodeNumber }}-claim0
  name: couchdb-{{ $nodeNumber }}-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ $.Values.couchdb.couchdb_node_storage_size | default "100Mi"}}  # Fallback for backward compatibility
  {{- if eq (toString $.Values.cluster_type) "eks" }}
  {{- if .Values.couchdb_data.preExistingDataAvailable }}
  volumeName: couchdb-pv-{{ $.Values.namespace }}-{{ $nodeNumber }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ $.Values.couchdb.storage_class | default "ebs-gp2" }}  # Fallback for backward compatibility
  {{- end }}
  {{- else if eq (toString $.Values.cluster_type) "gke" }}
  {{- if .Values.couchdb_data.preExistingDataAvailable }}
  volumeName: couchdb-pv-{{ $.Values.namespace }}-{{ $nodeNumber }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ $.Values.couchdb.storage_class | default "standard-rwo" }}  # Fallback for backward compatibility
  {{- end }}
  {{- else if eq (toString $.Values.cluster_type) "k3s-k3d" }}
  volumeName: couchdb-pv-{{ $.Values.namespace }}-{{ $nodeNumber }}
  storageClassName: {{ if and ($.Values.k3s_use_vSphere_storage_class) (eq (toString $.Values.k3s_use_vSphere_storage_class) "true") }}vsphere-storage-class{{ else }}local-storage{{ end }}
  {{- end }}
status: {}
--- #Don't remove the separator. We need this to separate yamls generated by the range command.
{{- end }}
{{- end }}
